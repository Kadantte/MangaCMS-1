"""Add first seen column

Revision ID: 84e96e7d2263
Revises: fd657f7977c2
Create Date: 2018-03-11 18:15:34.938594

"""

# revision identifiers, used by Alembic.
revision = '84e96e7d2263'
down_revision = 'fd657f7977c2'
branch_labels = None
depends_on = None

import tqdm
from alembic import op
import sqlalchemy as sa

import sqlalchemy_utils
import sqlalchemy_jsonfield

# Patch in knowledge of the citext type, so it reflects properly.
from sqlalchemy.dialects.postgresql.base import ischema_names
import citext
import queue
import datetime
from sqlalchemy.dialects.postgresql import ENUM
from sqlalchemy.dialects.postgresql import JSON
from sqlalchemy.dialects.postgresql import TSVECTOR
ischema_names['citext'] = citext.CIText



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    print("Adding colums")
    op.add_column('hentai_releases', sa.Column('first_seen', sa.DateTime(), nullable=True))
    op.add_column('manga_releases', sa.Column('first_seen', sa.DateTime(), nullable=True))

    conn = op.get_bind()
    print("Getting column extents")
    res_m = conn.execute("SELECT MIN(id), MAX(id) FROM manga_releases;")
    res_h = conn.execute("SELECT MIN(id), MAX(id) FROM hentai_releases;")

    m_min, m_max = list(res_m)[0]
    h_min, h_max = list(res_h)[0]

    print(res_m, res_h)
    print("Setting columns in manga table")
    step_size = 1000
    for x in tqdm.trange(m_min-1, m_max+1, step_size):
        conn.execute("UPDATE manga_releases SET first_seen = posted_at WHERE id >= %s and id <= %s;", x, x + step_size)
    print("Setting columns in hentai table")
    for x in tqdm.trange(h_min-1, h_max+1, step_size):
        conn.execute("UPDATE hentai_releases SET first_seen = posted_at WHERE id >= %s and id <= %s;", x, x + step_size)


    print("Adding not-null constraints")
    op.alter_column('hentai_releases', 'first_seen', nullable=False)
    op.alter_column('manga_releases', 'first_seen', nullable=False)

    print("Adding indexes")
    op.create_index(op.f('ix_hentai_files_tags_link_releases_id'), 'hentai_files_tags_link', ['releases_id'], unique=False)
    op.create_index(op.f('ix_hentai_files_tags_link_tags_id'), 'hentai_files_tags_link', ['tags_id'], unique=False)
    op.create_index(op.f('ix_hentai_releases_tags_link_releases_id'), 'hentai_releases_tags_link', ['releases_id'], unique=False)
    op.create_index(op.f('ix_hentai_releases_tags_link_tags_id'), 'hentai_releases_tags_link', ['tags_id'], unique=False)
    op.create_index(op.f('ix_release_files_fhash'), 'release_files', ['fhash'], unique=False)
    op.create_index(op.f('ix_release_files_filename'), 'release_files', ['filename'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_release_files_filename'), table_name='release_files')
    op.drop_index(op.f('ix_release_files_fhash'), table_name='release_files')
    op.drop_column('manga_releases', 'first_seen')
    op.drop_index(op.f('ix_hentai_releases_tags_link_tags_id'), table_name='hentai_releases_tags_link')
    op.drop_index(op.f('ix_hentai_releases_tags_link_releases_id'), table_name='hentai_releases_tags_link')
    op.drop_column('hentai_releases', 'first_seen')
    op.drop_index(op.f('ix_hentai_files_tags_link_tags_id'), table_name='hentai_files_tags_link')
    op.drop_index(op.f('ix_hentai_files_tags_link_releases_id'), table_name='hentai_files_tags_link')
    # ### end Alembic commands ###
