"""Doing checking

Revision ID: 886fe40dd4f1
Revises: 84e96e7d2263
Create Date: 2018-03-11 18:47:20.694284

"""

# revision identifiers, used by Alembic.
revision = '886fe40dd4f1'
down_revision = '84e96e7d2263'
branch_labels = None
depends_on = None

import tqdm

from alembic import op
import sqlalchemy as sa

import sqlalchemy_utils
import sqlalchemy_jsonfield

# Patch in knowledge of the citext type, so it reflects properly.
from sqlalchemy.dialects.postgresql.base import ischema_names
import citext
import queue
import datetime
from sqlalchemy.dialects.postgresql import ENUM
from sqlalchemy.dialects.postgresql import JSON
from sqlalchemy.dialects.postgresql import TSVECTOR
ischema_names['citext'] = citext.CIText



def upgrade():
	# ### commands auto generated by Alembic - please adjust! ###

	conn = op.get_bind()
	print("Getting column extents")
	res_m = conn.execute("SELECT MIN(id), MAX(id) FROM manga_releases where first_seen = %s;", (datetime.datetime.min, ))
	res_h = conn.execute("SELECT MIN(id), MAX(id) FROM hentai_releases where first_seen = %s;", (datetime.datetime.min, ))

	m_min, m_max = list(res_m)[0]
	h_min, h_max = list(res_h)[0]

	print("Extents: %s->%s, %s->%s" % (m_min, m_max, h_min, h_max))

	print("Getting Min counts")
	min_m = conn.execute("SELECT count(*) FROM manga_releases  WHERE first_seen = %s;", (datetime.datetime.min, ))
	min_h = conn.execute("SELECT count(*) FROM hentai_releases WHERE first_seen = %s;", (datetime.datetime.min, ))

	min_m = list(min_m)
	min_h = list(min_h)



	print("Min counts:", min_m, min_h)
	print("Setting columns in manga table")
	step_size = 1000
	if m_min and m_max:
		for x in tqdm.trange(m_min-1, m_max+1, step_size):
			ret = conn.execute("UPDATE manga_releases SET first_seen = downloaded_at WHERE id >= %s and id <= %s and first_seen = %s;", x, x + step_size, datetime.datetime.min)
	print("Setting columns in hentai table")
	if h_min and h_max:
		for x in tqdm.trange(h_min-1, h_max+1, step_size):
			conn.execute("UPDATE hentai_releases SET first_seen = downloaded_at WHERE id >= %s and id <= %s and first_seen = %s;", x, x + step_size, datetime.datetime.min)

	min_m = conn.execute("SELECT count(*) FROM manga_releases  WHERE first_seen = %s;", (datetime.datetime.min, ))
	min_h = conn.execute("SELECT count(*) FROM hentai_releases WHERE first_seen = %s;", (datetime.datetime.min, ))

	min_m = list(min_m)
	min_h = list(min_h)
	print("Min counts:", min_m, min_h)
	# ### end Alembic commands ###


def downgrade():
	# ### commands auto generated by Alembic - please adjust! ###
	pass
	# ### end Alembic commands ###
