"""Books table

Revision ID: 8f387fc7e63c
Revises: b8e27eaa87b9
Create Date: 2018-09-19 05:06:20.151843

"""

# revision identifiers, used by Alembic.
revision = '8f387fc7e63c'
down_revision = 'b8e27eaa87b9'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa

import sqlalchemy_utils
import sqlalchemy_jsonfield

# Patch in knowledge of the citext type, so it reflects properly.
from sqlalchemy.dialects.postgresql.base import ischema_names
import citext
import queue
import datetime
from sqlalchemy.dialects.postgresql import ENUM
from sqlalchemy.dialects.postgresql import JSON
from sqlalchemy.dialects.postgresql import TSVECTOR
ischema_names['citext'] = citext.CIText

from sqlalchemy.dialects import postgresql

dlstate_enum   = ENUM('new', 'fetching', 'processing', 'complete', 'error', 'removed', 'disabled', 'upload', 'missing', name='dlstate_enum', create_type=False)
dir_type       = ENUM('had_dir', 'created_dir', 'unknown', name='dirtype_enum', create_type=False)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_releases',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('state', dlstate_enum, nullable=False),
    sa.Column('err_str', sa.Text(), nullable=True),
    sa.Column('source_site', sa.Text(), nullable=False),
    sa.Column('source_id', sa.Text(), nullable=False),
    sa.Column('first_seen', sa.DateTime(), nullable=False),
    sa.Column('posted_at', sa.DateTime(), nullable=False),
    sa.Column('downloaded_at', sa.DateTime(), nullable=False),
    sa.Column('last_checked', sa.DateTime(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('was_duplicate', sa.Boolean(), nullable=False),
    sa.Column('phash_duplicate', sa.Boolean(), nullable=False),
    sa.Column('uploaded', sa.Boolean(), nullable=False),
    sa.Column('dirstate', dir_type, nullable=False),
    sa.Column('origin_name', citext.CIText(), nullable=True),
    sa.Column('series_name', citext.CIText(), nullable=True),
    sa.Column('additional_metadata', sqlalchemy_jsonfield.jsonfield.JSONField(), nullable=True),
    sa.Column('fileid', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['fileid'], ['release_files.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_site', 'source_id')
    )
    op.create_index('book_releases_source_site_id_idx', 'book_releases', ['source_site', 'source_id'], unique=False)
    op.create_index(op.f('ix_book_releases_series_name'), 'book_releases', ['series_name'], unique=False)
    op.create_index(op.f('ix_book_releases_source_id'), 'book_releases', ['source_id'], unique=False)
    op.create_index(op.f('ix_book_releases_source_site'), 'book_releases', ['source_site'], unique=False)
    op.create_index(op.f('ix_book_releases_state'), 'book_releases', ['state'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_book_releases_state'), table_name='book_releases')
    op.drop_index(op.f('ix_book_releases_source_site'), table_name='book_releases')
    op.drop_index(op.f('ix_book_releases_source_id'), table_name='book_releases')
    op.drop_index(op.f('ix_book_releases_series_name'), table_name='book_releases')
    op.drop_index('book_releases_source_site_id_idx', table_name='book_releases')
    op.drop_table('book_releases')
    # ### end Alembic commands ###
